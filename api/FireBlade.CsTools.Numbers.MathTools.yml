### YamlMime:ManagedReference
items:
- uid: FireBlade.CsTools.Numbers.MathTools
  commentId: T:FireBlade.CsTools.Numbers.MathTools
  id: MathTools
  parent: FireBlade.CsTools.Numbers
  children:
  - FireBlade.CsTools.Numbers.MathTools.IsEven``1(``0)
  - FireBlade.CsTools.Numbers.MathTools.IsOdd``1(``0)
  - FireBlade.CsTools.Numbers.MathTools.Map``1(``0,FireBlade.CsTools.Numbers.Range{``0},FireBlade.CsTools.Numbers.Range{``0})
  - FireBlade.CsTools.Numbers.MathTools.Mod``1(``0,``0)
  langs:
  - csharp
  - vb
  name: MathTools
  nameWithType: MathTools
  fullName: FireBlade.CsTools.Numbers.MathTools
  type: Class
  source:
    remote:
      path: CsTools/Numbers/MathTools.cs
      branch: main
      repo: https://github.com/FireBlade211/CsTools.git
    id: MathTools
    path: CsTools/Numbers/MathTools.cs
    startLine: 7
  assemblies:
  - CsTools
  namespace: FireBlade.CsTools.Numbers
  summary: Provides mathematical tools.
  example: []
  syntax:
    content: public static class MathTools
    content.vb: Public Module MathTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: FireBlade.CsTools.Numbers.MathTools.Map``1(``0,FireBlade.CsTools.Numbers.Range{``0},FireBlade.CsTools.Numbers.Range{``0})
  commentId: M:FireBlade.CsTools.Numbers.MathTools.Map``1(``0,FireBlade.CsTools.Numbers.Range{``0},FireBlade.CsTools.Numbers.Range{``0})
  id: Map``1(``0,FireBlade.CsTools.Numbers.Range{``0},FireBlade.CsTools.Numbers.Range{``0})
  parent: FireBlade.CsTools.Numbers.MathTools
  langs:
  - csharp
  - vb
  name: Map<TNum>(TNum, Range<TNum>, Range<TNum>)
  nameWithType: MathTools.Map<TNum>(TNum, Range<TNum>, Range<TNum>)
  fullName: FireBlade.CsTools.Numbers.MathTools.Map<TNum>(TNum, FireBlade.CsTools.Numbers.Range<TNum>, FireBlade.CsTools.Numbers.Range<TNum>)
  type: Method
  source:
    remote:
      path: CsTools/Numbers/MathTools.cs
      branch: main
      repo: https://github.com/FireBlade211/CsTools.git
    id: Map
    path: CsTools/Numbers/MathTools.cs
    startLine: 17
  assemblies:
  - CsTools
  namespace: FireBlade.CsTools.Numbers
  summary: Maps a value from the input range to the output range.
  example: []
  syntax:
    content: 'public static TNum Map<TNum>(TNum val, Range<TNum> input, Range<TNum> output) where TNum : INumber<TNum>'
    parameters:
    - id: val
      type: '{TNum}'
      description: The value to map.
    - id: input
      type: FireBlade.CsTools.Numbers.Range{{TNum}}
      description: The input range.
    - id: output
      type: FireBlade.CsTools.Numbers.Range{{TNum}}
      description: The output range.
    typeParameters:
    - id: TNum
      description: The number type.
    return:
      type: '{TNum}'
      description: <code class="paramref">val</code>, mapped from the <code class="paramref">input</code> range to the <code class="paramref">output</code> range.
    content.vb: Public Shared Function Map(Of TNum As INumber(Of TNum))(val As TNum, input As Range(Of TNum), output As Range(Of TNum)) As TNum
  overload: FireBlade.CsTools.Numbers.MathTools.Map*
  nameWithType.vb: MathTools.Map(Of TNum)(TNum, Range(Of TNum), Range(Of TNum))
  fullName.vb: FireBlade.CsTools.Numbers.MathTools.Map(Of TNum)(TNum, FireBlade.CsTools.Numbers.Range(Of TNum), FireBlade.CsTools.Numbers.Range(Of TNum))
  name.vb: Map(Of TNum)(TNum, Range(Of TNum), Range(Of TNum))
- uid: FireBlade.CsTools.Numbers.MathTools.Mod``1(``0,``0)
  commentId: M:FireBlade.CsTools.Numbers.MathTools.Mod``1(``0,``0)
  id: Mod``1(``0,``0)
  parent: FireBlade.CsTools.Numbers.MathTools
  langs:
  - csharp
  - vb
  name: Mod<TNum>(TNum, TNum)
  nameWithType: MathTools.Mod<TNum>(TNum, TNum)
  fullName: FireBlade.CsTools.Numbers.MathTools.Mod<TNum>(TNum, TNum)
  type: Method
  source:
    remote:
      path: CsTools/Numbers/MathTools.cs
      branch: main
      repo: https://github.com/FireBlade211/CsTools.git
    id: Mod
    path: CsTools/Numbers/MathTools.cs
    startLine: 40
  assemblies:
  - CsTools
  namespace: FireBlade.CsTools.Numbers
  summary: >-
    Returns the true modulo of a number.

    Works with negative numbers correctly.
  example: []
  syntax:
    content: 'public static TNum Mod<TNum>(TNum value, TNum modulus) where TNum : INumber<TNum>'
    parameters:
    - id: value
      type: '{TNum}'
      description: The value to apply the modulus operator on.
    - id: modulus
      type: '{TNum}'
      description: The modulus to apply.
    typeParameters:
    - id: TNum
      description: The number type.
    return:
      type: '{TNum}'
      description: The <code class="paramref">modulus</code> remainder of <code class="paramref">value</code> after division.
    content.vb: Public Shared Function [Mod](Of TNum As INumber(Of TNum))(value As TNum, modulus As TNum) As TNum
  overload: FireBlade.CsTools.Numbers.MathTools.Mod*
  nameWithType.vb: MathTools.Mod(Of TNum)(TNum, TNum)
  fullName.vb: FireBlade.CsTools.Numbers.MathTools.Mod(Of TNum)(TNum, TNum)
  name.vb: Mod(Of TNum)(TNum, TNum)
- uid: FireBlade.CsTools.Numbers.MathTools.IsOdd``1(``0)
  commentId: M:FireBlade.CsTools.Numbers.MathTools.IsOdd``1(``0)
  id: IsOdd``1(``0)
  parent: FireBlade.CsTools.Numbers.MathTools
  langs:
  - csharp
  - vb
  name: IsOdd<TNum>(TNum)
  nameWithType: MathTools.IsOdd<TNum>(TNum)
  fullName: FireBlade.CsTools.Numbers.MathTools.IsOdd<TNum>(TNum)
  type: Method
  source:
    remote:
      path: CsTools/Numbers/MathTools.cs
      branch: main
      repo: https://github.com/FireBlade211/CsTools.git
    id: IsOdd
    path: CsTools/Numbers/MathTools.cs
    startLine: 60
  assemblies:
  - CsTools
  namespace: FireBlade.CsTools.Numbers
  summary: Checks if a number is odd.
  example: []
  syntax:
    content: 'public static bool IsOdd<TNum>(TNum val) where TNum : INumber<TNum>'
    parameters:
    - id: val
      type: '{TNum}'
      description: The number to check.
    typeParameters:
    - id: TNum
      description: The number type.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the value is odd; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function IsOdd(Of TNum As INumber(Of TNum))(val As TNum) As Boolean
  overload: FireBlade.CsTools.Numbers.MathTools.IsOdd*
  nameWithType.vb: MathTools.IsOdd(Of TNum)(TNum)
  fullName.vb: FireBlade.CsTools.Numbers.MathTools.IsOdd(Of TNum)(TNum)
  name.vb: IsOdd(Of TNum)(TNum)
- uid: FireBlade.CsTools.Numbers.MathTools.IsEven``1(``0)
  commentId: M:FireBlade.CsTools.Numbers.MathTools.IsEven``1(``0)
  id: IsEven``1(``0)
  parent: FireBlade.CsTools.Numbers.MathTools
  langs:
  - csharp
  - vb
  name: IsEven<TNum>(TNum)
  nameWithType: MathTools.IsEven<TNum>(TNum)
  fullName: FireBlade.CsTools.Numbers.MathTools.IsEven<TNum>(TNum)
  type: Method
  source:
    remote:
      path: CsTools/Numbers/MathTools.cs
      branch: main
      repo: https://github.com/FireBlade211/CsTools.git
    id: IsEven
    path: CsTools/Numbers/MathTools.cs
    startLine: 71
  assemblies:
  - CsTools
  namespace: FireBlade.CsTools.Numbers
  summary: Checks if a number is even.
  example: []
  syntax:
    content: 'public static bool IsEven<TNum>(TNum val) where TNum : INumber<TNum>'
    parameters:
    - id: val
      type: '{TNum}'
      description: The number to check.
    typeParameters:
    - id: TNum
      description: The number type.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the value is even; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function IsEven(Of TNum As INumber(Of TNum))(val As TNum) As Boolean
  overload: FireBlade.CsTools.Numbers.MathTools.IsEven*
  nameWithType.vb: MathTools.IsEven(Of TNum)(TNum)
  fullName.vb: FireBlade.CsTools.Numbers.MathTools.IsEven(Of TNum)(TNum)
  name.vb: IsEven(Of TNum)(TNum)
references:
- uid: FireBlade.CsTools.Numbers
  commentId: N:FireBlade.CsTools.Numbers
  href: FireBlade.html
  name: FireBlade.CsTools.Numbers
  nameWithType: FireBlade.CsTools.Numbers
  fullName: FireBlade.CsTools.Numbers
  spec.csharp:
  - uid: FireBlade
    name: FireBlade
    href: FireBlade.html
  - name: .
  - uid: FireBlade.CsTools
    name: CsTools
    href: FireBlade.CsTools.html
  - name: .
  - uid: FireBlade.CsTools.Numbers
    name: Numbers
    href: FireBlade.CsTools.Numbers.html
  spec.vb:
  - uid: FireBlade
    name: FireBlade
    href: FireBlade.html
  - name: .
  - uid: FireBlade.CsTools
    name: CsTools
    href: FireBlade.CsTools.html
  - name: .
  - uid: FireBlade.CsTools.Numbers
    name: Numbers
    href: FireBlade.CsTools.Numbers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FireBlade.CsTools.Numbers.MathTools.Map*
  commentId: Overload:FireBlade.CsTools.Numbers.MathTools.Map
  href: FireBlade.CsTools.Numbers.MathTools.html#FireBlade_CsTools_Numbers_MathTools_Map__1___0_FireBlade_CsTools_Numbers_Range___0__FireBlade_CsTools_Numbers_Range___0__
  name: Map
  nameWithType: MathTools.Map
  fullName: FireBlade.CsTools.Numbers.MathTools.Map
- uid: '{TNum}'
  commentId: '!:TNum'
  definition: TNum
  name: TNum
  nameWithType: TNum
  fullName: TNum
- uid: FireBlade.CsTools.Numbers.Range{{TNum}}
  commentId: T:FireBlade.CsTools.Numbers.Range{``0}
  parent: FireBlade.CsTools.Numbers
  definition: FireBlade.CsTools.Numbers.Range`1
  href: FireBlade.CsTools.Numbers.Range-1.html
  name: Range<TNum>
  nameWithType: Range<TNum>
  fullName: FireBlade.CsTools.Numbers.Range<TNum>
  nameWithType.vb: Range(Of TNum)
  fullName.vb: FireBlade.CsTools.Numbers.Range(Of TNum)
  name.vb: Range(Of TNum)
  spec.csharp:
  - uid: FireBlade.CsTools.Numbers.Range`1
    name: Range
    href: FireBlade.CsTools.Numbers.Range-1.html
  - name: <
  - name: TNum
  - name: '>'
  spec.vb:
  - uid: FireBlade.CsTools.Numbers.Range`1
    name: Range
    href: FireBlade.CsTools.Numbers.Range-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TNum
  - name: )
- uid: TNum
  name: TNum
  nameWithType: TNum
  fullName: TNum
- uid: FireBlade.CsTools.Numbers.Range`1
  commentId: T:FireBlade.CsTools.Numbers.Range`1
  href: FireBlade.CsTools.Numbers.Range-1.html
  name: Range<TNum>
  nameWithType: Range<TNum>
  fullName: FireBlade.CsTools.Numbers.Range<TNum>
  nameWithType.vb: Range(Of TNum)
  fullName.vb: FireBlade.CsTools.Numbers.Range(Of TNum)
  name.vb: Range(Of TNum)
  spec.csharp:
  - uid: FireBlade.CsTools.Numbers.Range`1
    name: Range
    href: FireBlade.CsTools.Numbers.Range-1.html
  - name: <
  - name: TNum
  - name: '>'
  spec.vb:
  - uid: FireBlade.CsTools.Numbers.Range`1
    name: Range
    href: FireBlade.CsTools.Numbers.Range-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TNum
  - name: )
- uid: FireBlade.CsTools.Numbers.MathTools.Mod*
  commentId: Overload:FireBlade.CsTools.Numbers.MathTools.Mod
  href: FireBlade.CsTools.Numbers.MathTools.html#FireBlade_CsTools_Numbers_MathTools_Mod__1___0___0_
  name: Mod
  nameWithType: MathTools.Mod
  fullName: FireBlade.CsTools.Numbers.MathTools.Mod
- uid: FireBlade.CsTools.Numbers.MathTools.IsOdd*
  commentId: Overload:FireBlade.CsTools.Numbers.MathTools.IsOdd
  href: FireBlade.CsTools.Numbers.MathTools.html#FireBlade_CsTools_Numbers_MathTools_IsOdd__1___0_
  name: IsOdd
  nameWithType: MathTools.IsOdd
  fullName: FireBlade.CsTools.Numbers.MathTools.IsOdd
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FireBlade.CsTools.Numbers.MathTools.IsEven*
  commentId: Overload:FireBlade.CsTools.Numbers.MathTools.IsEven
  href: FireBlade.CsTools.Numbers.MathTools.html#FireBlade_CsTools_Numbers_MathTools_IsEven__1___0_
  name: IsEven
  nameWithType: MathTools.IsEven
  fullName: FireBlade.CsTools.Numbers.MathTools.IsEven
